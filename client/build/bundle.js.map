{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/app.js","webpack:///./src/model/computer_dates.js","webpack:///./src/model/computer_object.js","webpack:///./src/model/computer_object_view.js","webpack:///./src/model/request.js","webpack:///./src/view/canvas_view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;;;AAGA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;AAMA;;;;;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACbA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACZA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;;;;;;;;;;;;AC9CA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/app.js\");\n","const Request = require('./model/request.js');\nconst ComputerObject = require('./model/computer_object.js');\nconst ComputerObjectView = require('./model/computer_object_view.js');\nconst CanvasView = require('./view/canvas_view.js');\n\nconst databaseRequest = new Request('http://localhost:3000/computers');\nconst computerObjectView = new ComputerObjectView();\n\n\n\nconst app = function(){\n\n\n  const urlArray = [];\n  const canvas = new CanvasView();\n  const baseURL = 'http://collection.sciencemuseum.org.uk/objects/'\n  const fixedComputerObjects = [\"co62748\", \"co64128\", \"co62427\",\n  \"co8359400\", \"co503422\", \"co8401352\", \"co8035886\",\n  \"co8430789\", \"co8184137\", \"co8361071\"];\n  fixedComputerObjects.forEach(function(computer){\n    const requestUrl = baseURL + computer;\n    urlArray.push(requestUrl);\n\n  });\n\n  urlArray.forEach(function (url) {\n    const requestUrl = new Request (url);\n    requestUrl.get(computerAPIRequestComplete);\n  });\n\n  databaseRequest.get(getFromDBRequestComplete);\n\n\n  const xcord = [50, 150, 250, 350, 450, 550, 650, 750, 850, 950];\n  canvas.timeLine();\n  xcord.forEach(function(value){\n  canvas.drawCircle(value);\n  })\n\n\n}\n\n\n\nconst computerAPIRequestComplete = function (computer) {\n  const computerObject = new ComputerObject(computer.data);\n  databaseRequest.post(computerObject)\n}\n\nconst getFromDBRequestComplete = function (computers) {\n  databaseRequest.delete();\n  computers.forEach(function (computer) {\n    computerObjectView.addComputer(computer);\n  });\n  computerObjectView.sortByDate();\n  console.log(computerObjectView);\n  computerObjectView.populateObjectDetails(computerObjectView.computerObjects[0]);\n}\n\n\n\n\n\ndocument.addEventListener('DOMContentLoaded', app);\n","const ComputerDates = {\n\"co62748\": 1847 ,\n\"co64128\": 1939,\n\"co62427\": 1940,\n\"co8359400\": 1963,\n\"co503422\": 1976,\n\"co8401352\": 1985,\n\"co8035886\": 1989,\n\"co8430789\": 1997,\n\"co8184137\": 1998 ,\n\"co8361071\": 2008\n};\n\nmodule.exports = ComputerDates;\n","const ComputerDates = require('./computer_dates.js');\n\nconst ComputerObject = function (object) {\n  this.id = object.id;\n  this.date = ComputerDates[object.id];\n  this.name = object.attributes.title[0].value;\n  this.description1 = object.attributes.options.option1;\n  this.description2 = object.attributes.description[0].value;\n  this.image = object.attributes.multimedia[0].processed.large_thumbnail.location;\n  this.type = object.attributes.name[0].value;\n}\n\nmodule.exports = ComputerObject;\n","const ComputerObjectView = function () {\n    this.computerObjects = [];\n}\n\nComputerObjectView.prototype.addComputer = function (computer) {\n    this.computerObjects.push(computer);\n}\n\nComputerObjectView.prototype.sortByDate = function () {\n    this.computerObjects.sort(function (earliest, latest) {\n        return earliest.date - latest.date;\n    });\n}\n\nComputerObjectView.prototype.clear = function () {\n    this.computerObjects = [];\n}\n\nComputerObjectView.prototype.populateObjectDetails = function (computer) {\n    const section = document.getElementById('computer-info');\n    const detailDiv = document.getElementById('computer-detail-info');\n    const imageDiv = document.getElementById('computer-detail-image');\n    const ul = document.createElement('ul');\n    detailDiv.appendChild(ul);\n    this.createListElement('Date: ', computer.date, ul);\n    this.createListElement('Name: ', computer.name, ul);\n    let description = computer.description1;\n    if (computer.description1 === undefined) {\n        description = computer.description2;\n    }\n    this.createListElement('Description: ', description, ul);\n    this.createListElement('Type: ', computer.type, ul);\n    const image = document.createElement('img');\n    image.src = computer.image;\n    imageDiv.appendChild(image);\n\n}\n\nComputerObjectView.prototype.createListElement = function (label, text, surroundingDiv) {\n    const span = document.createElement('li');\n    span.innerText = label + text;\n    surroundingDiv.appendChild(span);\n\n}\n\n\nmodule.exports = ComputerObjectView;\n","const Request = function (url) {\n  this.url = url;\n}\n\nRequest.prototype.get = function (callback) {\n  const request = new XMLHttpRequest();\n  request.open('GET', this.url);\n  request.setRequestHeader('accept', 'application/json');\n  request.addEventListener('load', function () {\n    if(this.status !== 200) return;\n\n    const responseBody = JSON.parse(this.responseText);\n    callback(responseBody);\n  })\n  request.send();\n}\n\nRequest.prototype.post = function (body) {\n  const request = new XMLHttpRequest();\n  request.open('POST', this.url);\n  request.setRequestHeader('Content-Type', 'application/json');\n  request.addEventListener('load', function () {\n    if(this.status !== 201) return;\n\n    const responseBody = JSON.parse(this.responseText);\n\n  })\n  request.send(JSON.stringify(body));\n\n}\n\nRequest.prototype.delete = function () {\n  const request = new XMLHttpRequest();\n  request.open('DELETE', this.url);\n  request.addEventListener('load', function () {\n    if(this.status !== 204) return;\n  })\n  request.send();\n}\n\nmodule.exports = Request;\n","const CanvasView = function(){\n this.canvas = document.getElementById('timeline-canvas')\n this.context = this.canvas.getContext('2d')\n}\n\n// const context = this.canvas.getContext('2d')\n\nCanvasView.prototype.drawCircle = function (x) {\n\n  this.context.beginPath();\n  this.context.arc(x,50,15,0,Math.PI*2,true);\n  this.context.stroke();\n};\n\n\nCanvasView.prototype.timeLine = function(){\n  this.context.beginPath();\n  this.context.moveTo(50,50);\n  this.context.lineTo(950,50);\n  this.context.stroke();\n}\n\nmodule.exports = CanvasView;\n"],"sourceRoot":""}